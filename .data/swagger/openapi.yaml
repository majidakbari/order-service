openapi: 3.0.0
info:
  title: Order service API documentation
  contact:
    email: majidakbariiii@gmail.com
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: http://localhost:9080
    description: Local Server
paths:
  /api/order/price:
    post:
      tags:
        - Order
      summary: "Returns a shopping cart object with price."
      description: "This endpoint applies discount rules on a shopping cart and calculates the total price and finally returns the shopping cart."
      operationId: "order-price"
      security: []
      requestBody:
        $ref: "#/components/requestBodies/GetOrderPriceRequest"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ShoppingCart'
        406:
          description: "Invalid accept header"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "InvalidAcceptHeaderException"
                  message:
                    type: string
                    example: "This application only supports json response."
        422:
          description: "Unprocessable entity"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ValidationException"
                  message:
                    type: object
                    properties:
                      cart:
                        type: array
                        items:
                          type: string
                          example: "One or more than one validation error"
                      cart.*.product_id:
                        type: array
                        items:
                          type: string
                          example: "One or more than one validation error"
                      cart.*.amount:
                        type: array
                        items:
                          type: string
                          example: "One or more than one validation error"
      deprecated: false
components:
  requestBodies:
    GetOrderPriceRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOrderPriceRequestBody'
  schemas:
    GetOrderPriceRequestBody:
      description: "Get shopping cart total price request body"
      type: object
      required:
        - cart
      properties:
        cart:
          type: array
          items:
            $ref: "#/components/schemas/ShoppingCartItemRequestBody"
    ShoppingCartItemRequestBody:
      description: "Get shopping cart item total price request body"
      type: object
      required:
        - product_id
        - amount
      properties:
        product_id:
          type: integer
          example: 1
        amount:
          type: integer
          example: 1
    ShoppingCart:
      description: "ShoppingCart model"
      type: object
      properties:
        cart:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartItem'
        total_price:
          type: number
          format: float
          example: "100.25"
    ShoppingCartItem:
      description: "ShoppingCartItem model"
      type: object
      properties:
        amount:
          type: integer
          example: "1"
        product:
          $ref: '#/components/schemas/Product'
    Product:
      description: "Product entity"
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "foo"
        price:
          type: number
          format: float
          example: "10.25"
        createdAt:
          type: string
          format: dateTime
          example: "2020-09-14 00:00:00"
          readOnly: true
        updatedAt:
          type: string
          format: dateTime
          example: "2020-09-14 00:00:00"
          readOnly: true
openapi: 3.0.0
info:
  title: Order service API documentation
  contact:
    email: majidakbariiii@gmail.com
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: http://localhost:9080
    description: Local Server
paths:
  /api/transaction:
    post:
      tags:
        - Auth
      summary: "Store transaction endpoint"
      description: "This endpoint stores two transactions; one for the original transaction and another one for the commission. Finally it returns both of them"
      operationId: "transaction-store"
      security: []
      requestBody:
        $ref: "#/components/requestBodies/StoreTransactionRequest"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
        400:
          description: "Insufficient credit"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "InsufficientCreditException"
                  message:
                    type: string
                    example: "There is not enough balance in the wallet."
        406:
          description: "Invalid accept header"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "InvalidAcceptHeaderException"
                  message:
                    type: string
                    example: "This application only supports json response."
        422:
          description: "Unprocessable entity"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "ValidationException"
                  message:
                    type: object
                    properties:
                      source_wallet_id:
                        type: array
                        items:
                          type: string
                          example: "One or more than one validation error"
                      destination_wallet_id:
                        type: array
                        items:
                          type: string
                          example: "One or more than one validation error"
                      amount:
                        type: array
                        items:
                          type: string
                          example: "One or more than one validation error"
                      description:
                        type: array
                        items:
                          type: string
                          example: "One or more than one validation error"
      deprecated: false
components:
  requestBodies:
    StoreTransactionRequest:
      required: true
      content:
        application/json:
          schema:
            required:
              - source_wallet_id
              - destination_wallet_id
              - amount
            type: object
            properties:
              source_wallet_id:
                type: number
                format: int32
                example: 2
              destination_wallet_id:
                type: number
                format: int32
                example: 3
              amount:
                type: number
                format: float
                example: 100
              description:
                type: string
                example: "Lorem Ipsum"
  schemas:
    User:
      description: User model
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          example: 1
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john@doe.com"
        createdAt:
          type: string
          format: dateTime
          example: "2020-09-14 00:00:00"
          readOnly: true
        updatedAt:
          type: string
          format: dateTime
          example: "2020-09-14 00:00:00"
          readOnly: true
    Wallet:
      description: Wallet model
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          example: 1
        name:
          type: string
          example: "Primary"
        balance:
          type: number
          format: float
          example: 1000.50
        is_active:
          type: boolean
          example: true
        user_id:
          type: number
          format: int32
          example: 1
        createdAt:
          type: string
          format: dateTime
          example: "2020-09-14 00:00:00"
          readOnly: true
        updatedAt:
          type: string
          format: dateTime
          example: "2020-09-14 00:00:00"
          readOnly: true
    Transaction:
      description: Transaction model
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          example: 1
        source_wallet_id:
          type: number
          format: int32
          example: 2
        destination_wallet_id:
          type: number
          format: int32
          example: 3
        amount:
          type: number
          format: float
          example: "10.50"
        type_description:
          type: string
          enum:
            - "commission"
            - "transfer"
        description:
          type: string
          example: "Lorem Ipsum..."
        createdAt:
          type: string
          format: dateTime
          example: "2020-09-14 00:00:00"
          readOnly: true
        updatedAt:
          type: string
          format: dateTime
          example: "2020-09-14 00:00:00"
          readOnly: true